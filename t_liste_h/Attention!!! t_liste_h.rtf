{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red42\green49\blue64;\red245\green245\blue246;}
{\*\expandedcolortbl;;\cssrgb\c21569\c25490\c31765;\cssrgb\c96863\c96863\c97255;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
Dans t_liste_h (chain\'e9e 1) j\'92ai impl\'e9ment\'e9 une version chain\'e9e simple de t_liste_h (original).\
\
Cette version cr\'e9\'e9e un memory leak qui emp\'eachera l\'92ex\'e9cution compl\'e8te du code. Il faudra red\'e9marrer l\'92ordinateur pour pouvoir corriger la situation (oui c\'92est grave \'e0 ce point).\
\
J\'92ai essay\'e9 de concevoir un t_liste_h qui r\'e8gle le memory leak (t_liste_h (chain\'e9e 2), mais je ne l\'92ai toujours pas essay\'e9 (je ne me suis pas concentr\'e9 sur t_liste_h).\
\
J\'92ai inclus la version original si jamais vous essayez la version avec le memory leak et vous voulez v\'e9rifier si \'e7a fonctionne apr\'e8s un red\'e9marrage.\
}